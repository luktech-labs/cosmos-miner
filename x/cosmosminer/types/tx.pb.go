// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmosminer/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateStoredMiner struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index       string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	LastClaimed uint64 `protobuf:"varint,3,opt,name=lastClaimed,proto3" json:"lastClaimed,omitempty"`
}

func (m *MsgCreateStoredMiner) Reset()         { *m = MsgCreateStoredMiner{} }
func (m *MsgCreateStoredMiner) String() string { return proto.CompactTextString(m) }
func (*MsgCreateStoredMiner) ProtoMessage()    {}
func (*MsgCreateStoredMiner) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{0}
}
func (m *MsgCreateStoredMiner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateStoredMiner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateStoredMiner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateStoredMiner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateStoredMiner.Merge(m, src)
}
func (m *MsgCreateStoredMiner) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateStoredMiner) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateStoredMiner.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateStoredMiner proto.InternalMessageInfo

func (m *MsgCreateStoredMiner) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateStoredMiner) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateStoredMiner) GetLastClaimed() uint64 {
	if m != nil {
		return m.LastClaimed
	}
	return 0
}

type MsgCreateStoredMinerResponse struct {
}

func (m *MsgCreateStoredMinerResponse) Reset()         { *m = MsgCreateStoredMinerResponse{} }
func (m *MsgCreateStoredMinerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateStoredMinerResponse) ProtoMessage()    {}
func (*MsgCreateStoredMinerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{1}
}
func (m *MsgCreateStoredMinerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateStoredMinerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateStoredMinerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateStoredMinerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateStoredMinerResponse.Merge(m, src)
}
func (m *MsgCreateStoredMinerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateStoredMinerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateStoredMinerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateStoredMinerResponse proto.InternalMessageInfo

type MsgUpdateStoredMiner struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index       string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	LastClaimed uint64 `protobuf:"varint,3,opt,name=lastClaimed,proto3" json:"lastClaimed,omitempty"`
}

func (m *MsgUpdateStoredMiner) Reset()         { *m = MsgUpdateStoredMiner{} }
func (m *MsgUpdateStoredMiner) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateStoredMiner) ProtoMessage()    {}
func (*MsgUpdateStoredMiner) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{2}
}
func (m *MsgUpdateStoredMiner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateStoredMiner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateStoredMiner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateStoredMiner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateStoredMiner.Merge(m, src)
}
func (m *MsgUpdateStoredMiner) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateStoredMiner) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateStoredMiner.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateStoredMiner proto.InternalMessageInfo

func (m *MsgUpdateStoredMiner) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateStoredMiner) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateStoredMiner) GetLastClaimed() uint64 {
	if m != nil {
		return m.LastClaimed
	}
	return 0
}

type MsgUpdateStoredMinerResponse struct {
}

func (m *MsgUpdateStoredMinerResponse) Reset()         { *m = MsgUpdateStoredMinerResponse{} }
func (m *MsgUpdateStoredMinerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateStoredMinerResponse) ProtoMessage()    {}
func (*MsgUpdateStoredMinerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{3}
}
func (m *MsgUpdateStoredMinerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateStoredMinerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateStoredMinerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateStoredMinerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateStoredMinerResponse.Merge(m, src)
}
func (m *MsgUpdateStoredMinerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateStoredMinerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateStoredMinerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateStoredMinerResponse proto.InternalMessageInfo

type MsgDeleteStoredMiner struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteStoredMiner) Reset()         { *m = MsgDeleteStoredMiner{} }
func (m *MsgDeleteStoredMiner) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteStoredMiner) ProtoMessage()    {}
func (*MsgDeleteStoredMiner) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{4}
}
func (m *MsgDeleteStoredMiner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteStoredMiner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteStoredMiner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteStoredMiner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteStoredMiner.Merge(m, src)
}
func (m *MsgDeleteStoredMiner) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteStoredMiner) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteStoredMiner.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteStoredMiner proto.InternalMessageInfo

func (m *MsgDeleteStoredMiner) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteStoredMiner) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteStoredMinerResponse struct {
}

func (m *MsgDeleteStoredMinerResponse) Reset()         { *m = MsgDeleteStoredMinerResponse{} }
func (m *MsgDeleteStoredMinerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteStoredMinerResponse) ProtoMessage()    {}
func (*MsgDeleteStoredMinerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{5}
}
func (m *MsgDeleteStoredMinerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteStoredMinerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteStoredMinerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteStoredMinerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteStoredMinerResponse.Merge(m, src)
}
func (m *MsgDeleteStoredMinerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteStoredMinerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteStoredMinerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteStoredMinerResponse proto.InternalMessageInfo

type MsgCreateMinerTemplate struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price         uint64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	ProdPerSecond uint64 `protobuf:"varint,4,opt,name=prodPerSecond,proto3" json:"prodPerSecond,omitempty"`
	MinClaimTime  uint64 `protobuf:"varint,5,opt,name=minClaimTime,proto3" json:"minClaimTime,omitempty"`
}

func (m *MsgCreateMinerTemplate) Reset()         { *m = MsgCreateMinerTemplate{} }
func (m *MsgCreateMinerTemplate) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMinerTemplate) ProtoMessage()    {}
func (*MsgCreateMinerTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{6}
}
func (m *MsgCreateMinerTemplate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMinerTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMinerTemplate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMinerTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMinerTemplate.Merge(m, src)
}
func (m *MsgCreateMinerTemplate) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMinerTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMinerTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMinerTemplate proto.InternalMessageInfo

func (m *MsgCreateMinerTemplate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateMinerTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateMinerTemplate) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MsgCreateMinerTemplate) GetProdPerSecond() uint64 {
	if m != nil {
		return m.ProdPerSecond
	}
	return 0
}

func (m *MsgCreateMinerTemplate) GetMinClaimTime() uint64 {
	if m != nil {
		return m.MinClaimTime
	}
	return 0
}

type MsgCreateMinerTemplateResponse struct {
	MinerTemplateIndex string `protobuf:"bytes,1,opt,name=minerTemplateIndex,proto3" json:"minerTemplateIndex,omitempty"`
}

func (m *MsgCreateMinerTemplateResponse) Reset()         { *m = MsgCreateMinerTemplateResponse{} }
func (m *MsgCreateMinerTemplateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMinerTemplateResponse) ProtoMessage()    {}
func (*MsgCreateMinerTemplateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{7}
}
func (m *MsgCreateMinerTemplateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMinerTemplateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMinerTemplateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMinerTemplateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMinerTemplateResponse.Merge(m, src)
}
func (m *MsgCreateMinerTemplateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMinerTemplateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMinerTemplateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMinerTemplateResponse proto.InternalMessageInfo

func (m *MsgCreateMinerTemplateResponse) GetMinerTemplateIndex() string {
	if m != nil {
		return m.MinerTemplateIndex
	}
	return ""
}

type MsgCreateMiner struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MinerTemplateID uint64 `protobuf:"varint,2,opt,name=minerTemplateID,proto3" json:"minerTemplateID,omitempty"`
}

func (m *MsgCreateMiner) Reset()         { *m = MsgCreateMiner{} }
func (m *MsgCreateMiner) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMiner) ProtoMessage()    {}
func (*MsgCreateMiner) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{8}
}
func (m *MsgCreateMiner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMiner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMiner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMiner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMiner.Merge(m, src)
}
func (m *MsgCreateMiner) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMiner) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMiner.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMiner proto.InternalMessageInfo

func (m *MsgCreateMiner) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateMiner) GetMinerTemplateID() uint64 {
	if m != nil {
		return m.MinerTemplateID
	}
	return 0
}

type MsgCreateMinerResponse struct {
	MinerIndex string `protobuf:"bytes,1,opt,name=minerIndex,proto3" json:"minerIndex,omitempty"`
}

func (m *MsgCreateMinerResponse) Reset()         { *m = MsgCreateMinerResponse{} }
func (m *MsgCreateMinerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMinerResponse) ProtoMessage()    {}
func (*MsgCreateMinerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{9}
}
func (m *MsgCreateMinerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMinerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMinerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMinerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMinerResponse.Merge(m, src)
}
func (m *MsgCreateMinerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMinerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMinerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMinerResponse proto.InternalMessageInfo

func (m *MsgCreateMinerResponse) GetMinerIndex() string {
	if m != nil {
		return m.MinerIndex
	}
	return ""
}

type MsgMine struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MinerID uint64 `protobuf:"varint,2,opt,name=minerID,proto3" json:"minerID,omitempty"`
}

func (m *MsgMine) Reset()         { *m = MsgMine{} }
func (m *MsgMine) String() string { return proto.CompactTextString(m) }
func (*MsgMine) ProtoMessage()    {}
func (*MsgMine) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{10}
}
func (m *MsgMine) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMine.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMine.Merge(m, src)
}
func (m *MsgMine) XXX_Size() int {
	return m.Size()
}
func (m *MsgMine) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMine.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMine proto.InternalMessageInfo

func (m *MsgMine) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMine) GetMinerID() uint64 {
	if m != nil {
		return m.MinerID
	}
	return 0
}

type MsgMineResponse struct {
	AmountMined string `protobuf:"bytes,1,opt,name=amountMined,proto3" json:"amountMined,omitempty"`
}

func (m *MsgMineResponse) Reset()         { *m = MsgMineResponse{} }
func (m *MsgMineResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMineResponse) ProtoMessage()    {}
func (*MsgMineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0f331df5854a889, []int{11}
}
func (m *MsgMineResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMineResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMineResponse.Merge(m, src)
}
func (m *MsgMineResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMineResponse proto.InternalMessageInfo

func (m *MsgMineResponse) GetAmountMined() string {
	if m != nil {
		return m.AmountMined
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgCreateStoredMiner)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgCreateStoredMiner")
	proto.RegisterType((*MsgCreateStoredMinerResponse)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgCreateStoredMinerResponse")
	proto.RegisterType((*MsgUpdateStoredMiner)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgUpdateStoredMiner")
	proto.RegisterType((*MsgUpdateStoredMinerResponse)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgUpdateStoredMinerResponse")
	proto.RegisterType((*MsgDeleteStoredMiner)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgDeleteStoredMiner")
	proto.RegisterType((*MsgDeleteStoredMinerResponse)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgDeleteStoredMinerResponse")
	proto.RegisterType((*MsgCreateMinerTemplate)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgCreateMinerTemplate")
	proto.RegisterType((*MsgCreateMinerTemplateResponse)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgCreateMinerTemplateResponse")
	proto.RegisterType((*MsgCreateMiner)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgCreateMiner")
	proto.RegisterType((*MsgCreateMinerResponse)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgCreateMinerResponse")
	proto.RegisterType((*MsgMine)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgMine")
	proto.RegisterType((*MsgMineResponse)(nil), "luktechlabs.cosmosminer.cosmosminer.MsgMineResponse")
}

func init() { proto.RegisterFile("cosmosminer/tx.proto", fileDescriptor_a0f331df5854a889) }

var fileDescriptor_a0f331df5854a889 = []byte{
	// 545 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x95, 0x4d, 0x8b, 0xd3, 0x40,
	0x18, 0xc7, 0x37, 0x6e, 0x76, 0x8b, 0x4f, 0xd5, 0xc5, 0xb1, 0x48, 0x08, 0x32, 0x94, 0xe8, 0xa1,
	0x07, 0x37, 0x05, 0xeb, 0x61, 0x45, 0x3c, 0x68, 0x17, 0xc1, 0x43, 0x61, 0xc9, 0xd6, 0x8b, 0x17,
	0x49, 0x93, 0x87, 0x36, 0x9a, 0xc9, 0x84, 0x4c, 0x0a, 0xf5, 0xe4, 0x57, 0xd0, 0x93, 0xdf, 0xc0,
	0xcf, 0xb2, 0xc7, 0x3d, 0x7a, 0x94, 0xf6, 0x8b, 0x48, 0x26, 0x2f, 0x24, 0x9b, 0x6c, 0xc9, 0x76,
	0xc1, 0x5b, 0xe6, 0x79, 0xf9, 0x3f, 0xbf, 0x67, 0xc2, 0x9f, 0x81, 0x9e, 0xc3, 0x05, 0xe3, 0x82,
	0x79, 0x01, 0x46, 0xc3, 0x78, 0x65, 0x86, 0x11, 0x8f, 0x39, 0x79, 0xea, 0x2f, 0xbf, 0xc6, 0xe8,
	0x2c, 0x7c, 0x7b, 0x26, 0xcc, 0x52, 0x45, 0xf9, 0x5b, 0xa7, 0xe5, 0x56, 0x11, 0xf3, 0x08, 0xdd,
	0xcf, 0x69, 0x95, 0x14, 0x31, 0x16, 0xd0, 0x9b, 0x88, 0xf9, 0x38, 0x42, 0x3b, 0xc6, 0x73, 0x99,
	0x9e, 0x24, 0x59, 0xa2, 0x41, 0xc7, 0x49, 0x82, 0x3c, 0xd2, 0x94, 0xbe, 0x32, 0xb8, 0x6b, 0xe5,
	0x47, 0xd2, 0x83, 0x03, 0x2f, 0x70, 0x71, 0xa5, 0xdd, 0x91, 0xf1, 0xf4, 0x40, 0xfa, 0xd0, 0xf5,
	0x6d, 0x11, 0x8f, 0x7d, 0xdb, 0x63, 0xe8, 0x6a, 0xfb, 0x7d, 0x65, 0xa0, 0x5a, 0xe5, 0x90, 0x41,
	0xe1, 0x49, 0xd3, 0x24, 0x0b, 0x45, 0xc8, 0x03, 0x81, 0x19, 0xc9, 0xc7, 0xd0, 0xfd, 0x4f, 0x24,
	0xb5, 0x49, 0x05, 0xc9, 0x7b, 0x49, 0x72, 0x8a, 0x3e, 0xde, 0x8a, 0x24, 0x9b, 0x53, 0xd3, 0x29,
	0xe6, 0xfc, 0x56, 0xe0, 0x71, 0x71, 0x25, 0x32, 0x35, 0x45, 0x16, 0xfa, 0x76, 0x8c, 0x5b, 0x46,
	0x11, 0x50, 0x03, 0x9b, 0x61, 0x36, 0x49, 0x7e, 0x27, 0xe3, 0xc3, 0xc8, 0x73, 0x30, 0x5b, 0x36,
	0x3d, 0x90, 0x67, 0x70, 0x3f, 0x8c, 0xb8, 0x7b, 0x86, 0xd1, 0x39, 0x3a, 0x3c, 0x70, 0x35, 0x55,
	0x66, 0xab, 0x41, 0x62, 0xc0, 0x3d, 0xe6, 0x05, 0xf2, 0x6a, 0xa6, 0x1e, 0x43, 0xed, 0x40, 0x16,
	0x55, 0x62, 0xc6, 0x19, 0xd0, 0x66, 0xce, 0x7c, 0x15, 0x62, 0x02, 0x61, 0xe5, 0xc4, 0x07, 0x79,
	0x1b, 0x29, 0x7a, 0x43, 0xc6, 0x98, 0xc2, 0x83, 0xaa, 0xe2, 0x96, 0x8d, 0x07, 0x70, 0x54, 0x55,
	0x38, 0x95, 0xcb, 0xab, 0xd6, 0xd5, 0xb0, 0x71, 0x72, 0xf5, 0x3e, 0x0b, 0x3e, 0x0a, 0x20, 0x8b,
	0xcb, 0x5c, 0xa5, 0x88, 0xf1, 0x06, 0x3a, 0x13, 0x31, 0x4f, 0x7a, 0xb6, 0x80, 0x68, 0xd0, 0x49,
	0x5b, 0x72, 0x80, 0xfc, 0x68, 0x8c, 0xe0, 0x28, 0x6b, 0x2f, 0x26, 0xf6, 0xa1, 0x6b, 0x33, 0xbe,
	0x0c, 0xe2, 0x24, 0xea, 0x66, 0x52, 0xe5, 0xd0, 0x8b, 0x8b, 0x43, 0xd8, 0x9f, 0x88, 0x39, 0xf9,
	0xa9, 0xc0, 0xc3, 0xba, 0x01, 0x5f, 0x99, 0x2d, 0xec, 0x6d, 0x36, 0x39, 0x4a, 0x7f, 0xbb, 0x73,
	0x6b, 0x41, 0x9f, 0x30, 0xd5, 0xad, 0xd8, 0x9a, 0xa9, 0xd6, 0xda, 0x9e, 0xe9, 0x5a, 0x5b, 0x4a,
	0xa6, 0xba, 0x29, 0x5b, 0x33, 0xd5, 0x5a, 0xdb, 0x33, 0x5d, 0x6b, 0x61, 0xf2, 0x4b, 0x81, 0x47,
	0x4d, 0xfe, 0x7d, 0x7d, 0xb3, 0x5f, 0x50, 0x69, 0xd6, 0xc7, 0xb7, 0x68, 0x2e, 0xc8, 0xbe, 0x43,
	0xb7, 0x6c, 0xaf, 0xd1, 0x0e, 0x9a, 0xfa, 0x2e, 0x5b, 0x14, 0x00, 0x5f, 0x40, 0x95, 0x7e, 0x7a,
	0xde, 0x56, 0x24, 0xa9, 0xd6, 0x5f, 0xde, 0xa4, 0x3a, 0x9f, 0xf5, 0xce, 0xba, 0x58, 0x53, 0xe5,
	0x72, 0x4d, 0x95, 0xbf, 0x6b, 0xaa, 0xfc, 0xd8, 0xd0, 0xbd, 0xcb, 0x0d, 0xdd, 0xfb, 0xb3, 0xa1,
	0x7b, 0x9f, 0x4e, 0xe6, 0x5e, 0xbc, 0x58, 0xce, 0x4c, 0x87, 0xb3, 0x61, 0xa6, 0x7c, 0x9c, 0x48,
	0x0f, 0x53, 0xb9, 0xe3, 0xf4, 0x61, 0x5c, 0x0d, 0x2b, 0x2f, 0xec, 0xb7, 0x10, 0xc5, 0xec, 0x50,
	0x3e, 0x90, 0xa3, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x44, 0x4b, 0x3d, 0xd8, 0x7d, 0x07, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateStoredMiner(ctx context.Context, in *MsgCreateStoredMiner, opts ...grpc.CallOption) (*MsgCreateStoredMinerResponse, error)
	UpdateStoredMiner(ctx context.Context, in *MsgUpdateStoredMiner, opts ...grpc.CallOption) (*MsgUpdateStoredMinerResponse, error)
	DeleteStoredMiner(ctx context.Context, in *MsgDeleteStoredMiner, opts ...grpc.CallOption) (*MsgDeleteStoredMinerResponse, error)
	CreateMinerTemplate(ctx context.Context, in *MsgCreateMinerTemplate, opts ...grpc.CallOption) (*MsgCreateMinerTemplateResponse, error)
	CreateMiner(ctx context.Context, in *MsgCreateMiner, opts ...grpc.CallOption) (*MsgCreateMinerResponse, error)
	Mine(ctx context.Context, in *MsgMine, opts ...grpc.CallOption) (*MsgMineResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateStoredMiner(ctx context.Context, in *MsgCreateStoredMiner, opts ...grpc.CallOption) (*MsgCreateStoredMinerResponse, error) {
	out := new(MsgCreateStoredMinerResponse)
	err := c.cc.Invoke(ctx, "/luktechlabs.cosmosminer.cosmosminer.Msg/CreateStoredMiner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateStoredMiner(ctx context.Context, in *MsgUpdateStoredMiner, opts ...grpc.CallOption) (*MsgUpdateStoredMinerResponse, error) {
	out := new(MsgUpdateStoredMinerResponse)
	err := c.cc.Invoke(ctx, "/luktechlabs.cosmosminer.cosmosminer.Msg/UpdateStoredMiner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteStoredMiner(ctx context.Context, in *MsgDeleteStoredMiner, opts ...grpc.CallOption) (*MsgDeleteStoredMinerResponse, error) {
	out := new(MsgDeleteStoredMinerResponse)
	err := c.cc.Invoke(ctx, "/luktechlabs.cosmosminer.cosmosminer.Msg/DeleteStoredMiner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateMinerTemplate(ctx context.Context, in *MsgCreateMinerTemplate, opts ...grpc.CallOption) (*MsgCreateMinerTemplateResponse, error) {
	out := new(MsgCreateMinerTemplateResponse)
	err := c.cc.Invoke(ctx, "/luktechlabs.cosmosminer.cosmosminer.Msg/CreateMinerTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateMiner(ctx context.Context, in *MsgCreateMiner, opts ...grpc.CallOption) (*MsgCreateMinerResponse, error) {
	out := new(MsgCreateMinerResponse)
	err := c.cc.Invoke(ctx, "/luktechlabs.cosmosminer.cosmosminer.Msg/CreateMiner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Mine(ctx context.Context, in *MsgMine, opts ...grpc.CallOption) (*MsgMineResponse, error) {
	out := new(MsgMineResponse)
	err := c.cc.Invoke(ctx, "/luktechlabs.cosmosminer.cosmosminer.Msg/Mine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateStoredMiner(context.Context, *MsgCreateStoredMiner) (*MsgCreateStoredMinerResponse, error)
	UpdateStoredMiner(context.Context, *MsgUpdateStoredMiner) (*MsgUpdateStoredMinerResponse, error)
	DeleteStoredMiner(context.Context, *MsgDeleteStoredMiner) (*MsgDeleteStoredMinerResponse, error)
	CreateMinerTemplate(context.Context, *MsgCreateMinerTemplate) (*MsgCreateMinerTemplateResponse, error)
	CreateMiner(context.Context, *MsgCreateMiner) (*MsgCreateMinerResponse, error)
	Mine(context.Context, *MsgMine) (*MsgMineResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateStoredMiner(ctx context.Context, req *MsgCreateStoredMiner) (*MsgCreateStoredMinerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStoredMiner not implemented")
}
func (*UnimplementedMsgServer) UpdateStoredMiner(ctx context.Context, req *MsgUpdateStoredMiner) (*MsgUpdateStoredMinerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStoredMiner not implemented")
}
func (*UnimplementedMsgServer) DeleteStoredMiner(ctx context.Context, req *MsgDeleteStoredMiner) (*MsgDeleteStoredMinerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStoredMiner not implemented")
}
func (*UnimplementedMsgServer) CreateMinerTemplate(ctx context.Context, req *MsgCreateMinerTemplate) (*MsgCreateMinerTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMinerTemplate not implemented")
}
func (*UnimplementedMsgServer) CreateMiner(ctx context.Context, req *MsgCreateMiner) (*MsgCreateMinerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMiner not implemented")
}
func (*UnimplementedMsgServer) Mine(ctx context.Context, req *MsgMine) (*MsgMineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mine not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateStoredMiner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateStoredMiner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateStoredMiner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luktechlabs.cosmosminer.cosmosminer.Msg/CreateStoredMiner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateStoredMiner(ctx, req.(*MsgCreateStoredMiner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateStoredMiner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateStoredMiner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateStoredMiner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luktechlabs.cosmosminer.cosmosminer.Msg/UpdateStoredMiner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateStoredMiner(ctx, req.(*MsgUpdateStoredMiner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteStoredMiner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteStoredMiner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteStoredMiner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luktechlabs.cosmosminer.cosmosminer.Msg/DeleteStoredMiner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteStoredMiner(ctx, req.(*MsgDeleteStoredMiner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateMinerTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMinerTemplate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMinerTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luktechlabs.cosmosminer.cosmosminer.Msg/CreateMinerTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMinerTemplate(ctx, req.(*MsgCreateMinerTemplate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateMiner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMiner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMiner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luktechlabs.cosmosminer.cosmosminer.Msg/CreateMiner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMiner(ctx, req.(*MsgCreateMiner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Mine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMine)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Mine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luktechlabs.cosmosminer.cosmosminer.Msg/Mine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Mine(ctx, req.(*MsgMine))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luktechlabs.cosmosminer.cosmosminer.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStoredMiner",
			Handler:    _Msg_CreateStoredMiner_Handler,
		},
		{
			MethodName: "UpdateStoredMiner",
			Handler:    _Msg_UpdateStoredMiner_Handler,
		},
		{
			MethodName: "DeleteStoredMiner",
			Handler:    _Msg_DeleteStoredMiner_Handler,
		},
		{
			MethodName: "CreateMinerTemplate",
			Handler:    _Msg_CreateMinerTemplate_Handler,
		},
		{
			MethodName: "CreateMiner",
			Handler:    _Msg_CreateMiner_Handler,
		},
		{
			MethodName: "Mine",
			Handler:    _Msg_Mine_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cosmosminer/tx.proto",
}

func (m *MsgCreateStoredMiner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateStoredMiner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateStoredMiner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastClaimed != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastClaimed))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateStoredMinerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateStoredMinerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateStoredMinerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateStoredMiner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateStoredMiner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateStoredMiner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastClaimed != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastClaimed))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateStoredMinerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateStoredMinerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateStoredMinerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteStoredMiner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteStoredMiner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteStoredMiner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteStoredMinerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteStoredMinerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteStoredMinerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateMinerTemplate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMinerTemplate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMinerTemplate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MinClaimTime != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MinClaimTime))
		i--
		dAtA[i] = 0x28
	}
	if m.ProdPerSecond != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProdPerSecond))
		i--
		dAtA[i] = 0x20
	}
	if m.Price != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMinerTemplateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMinerTemplateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMinerTemplateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MinerTemplateIndex) > 0 {
		i -= len(m.MinerTemplateIndex)
		copy(dAtA[i:], m.MinerTemplateIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MinerTemplateIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMiner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMiner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMiner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MinerTemplateID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MinerTemplateID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMinerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMinerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMinerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MinerIndex) > 0 {
		i -= len(m.MinerIndex)
		copy(dAtA[i:], m.MinerIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MinerIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMine) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMine) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMine) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MinerID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MinerID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMineResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMineResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMineResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AmountMined) > 0 {
		i -= len(m.AmountMined)
		copy(dAtA[i:], m.AmountMined)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AmountMined)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateStoredMiner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastClaimed != 0 {
		n += 1 + sovTx(uint64(m.LastClaimed))
	}
	return n
}

func (m *MsgCreateStoredMinerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateStoredMiner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastClaimed != 0 {
		n += 1 + sovTx(uint64(m.LastClaimed))
	}
	return n
}

func (m *MsgUpdateStoredMinerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteStoredMiner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteStoredMinerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateMinerTemplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Price != 0 {
		n += 1 + sovTx(uint64(m.Price))
	}
	if m.ProdPerSecond != 0 {
		n += 1 + sovTx(uint64(m.ProdPerSecond))
	}
	if m.MinClaimTime != 0 {
		n += 1 + sovTx(uint64(m.MinClaimTime))
	}
	return n
}

func (m *MsgCreateMinerTemplateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MinerTemplateIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateMiner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MinerTemplateID != 0 {
		n += 1 + sovTx(uint64(m.MinerTemplateID))
	}
	return n
}

func (m *MsgCreateMinerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MinerIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMine) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MinerID != 0 {
		n += 1 + sovTx(uint64(m.MinerID))
	}
	return n
}

func (m *MsgMineResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AmountMined)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateStoredMiner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateStoredMiner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateStoredMiner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastClaimed", wireType)
			}
			m.LastClaimed = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastClaimed |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateStoredMinerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateStoredMinerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateStoredMinerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateStoredMiner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateStoredMiner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateStoredMiner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastClaimed", wireType)
			}
			m.LastClaimed = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastClaimed |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateStoredMinerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateStoredMinerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateStoredMinerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteStoredMiner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteStoredMiner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteStoredMiner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteStoredMinerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteStoredMinerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteStoredMinerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMinerTemplate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMinerTemplate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMinerTemplate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProdPerSecond", wireType)
			}
			m.ProdPerSecond = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProdPerSecond |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinClaimTime", wireType)
			}
			m.MinClaimTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinClaimTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMinerTemplateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMinerTemplateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMinerTemplateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinerTemplateIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinerTemplateIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMiner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMiner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMiner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinerTemplateID", wireType)
			}
			m.MinerTemplateID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinerTemplateID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMinerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMinerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMinerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinerIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinerIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMine) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMine: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMine: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinerID", wireType)
			}
			m.MinerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinerID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMineResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMineResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMineResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmountMined", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AmountMined = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
