// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmosminer/stored_miner_template.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StoredMinerTemplate struct {
	Index         string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price         uint64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	ClaimTime     uint64 `protobuf:"varint,4,opt,name=claimTime,proto3" json:"claimTime,omitempty"`
	ProdPerSecond uint64 `protobuf:"varint,5,opt,name=prodPerSecond,proto3" json:"prodPerSecond,omitempty"`
}

func (m *StoredMinerTemplate) Reset()         { *m = StoredMinerTemplate{} }
func (m *StoredMinerTemplate) String() string { return proto.CompactTextString(m) }
func (*StoredMinerTemplate) ProtoMessage()    {}
func (*StoredMinerTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e3dbfa068d71008, []int{0}
}
func (m *StoredMinerTemplate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StoredMinerTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StoredMinerTemplate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StoredMinerTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoredMinerTemplate.Merge(m, src)
}
func (m *StoredMinerTemplate) XXX_Size() int {
	return m.Size()
}
func (m *StoredMinerTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_StoredMinerTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_StoredMinerTemplate proto.InternalMessageInfo

func (m *StoredMinerTemplate) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *StoredMinerTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StoredMinerTemplate) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *StoredMinerTemplate) GetClaimTime() uint64 {
	if m != nil {
		return m.ClaimTime
	}
	return 0
}

func (m *StoredMinerTemplate) GetProdPerSecond() uint64 {
	if m != nil {
		return m.ProdPerSecond
	}
	return 0
}

func init() {
	proto.RegisterType((*StoredMinerTemplate)(nil), "luktechlabs.cosmosminer.cosmosminer.StoredMinerTemplate")
}

func init() {
	proto.RegisterFile("cosmosminer/stored_miner_template.proto", fileDescriptor_1e3dbfa068d71008)
}

var fileDescriptor_1e3dbfa068d71008 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4f, 0xce, 0x2f, 0xce,
	0xcd, 0x2f, 0xce, 0xcd, 0xcc, 0x4b, 0x2d, 0xd2, 0x2f, 0x2e, 0xc9, 0x2f, 0x4a, 0x4d, 0x89, 0x07,
	0x73, 0xe2, 0x4b, 0x52, 0x73, 0x0b, 0x72, 0x12, 0x4b, 0x52, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2,
	0x85, 0x94, 0x73, 0x4a, 0xb3, 0x4b, 0x52, 0x93, 0x33, 0x72, 0x12, 0x93, 0x8a, 0xf5, 0x90, 0x34,
	0x21, 0xb3, 0x95, 0x66, 0x32, 0x72, 0x09, 0x07, 0x83, 0x0d, 0xf1, 0x05, 0xf1, 0x43, 0xa0, 0x46,
	0x08, 0x89, 0x70, 0xb1, 0x66, 0xe6, 0xa5, 0xa4, 0x56, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06,
	0x41, 0x38, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x4c, 0x60, 0x41, 0x30, 0x1b,
	0xa4, 0xb2, 0xa0, 0x28, 0x33, 0x39, 0x55, 0x82, 0x59, 0x81, 0x51, 0x83, 0x25, 0x08, 0xc2, 0x11,
	0x92, 0xe1, 0xe2, 0x4c, 0xce, 0x49, 0xcc, 0xcc, 0x0d, 0xc9, 0xcc, 0x4d, 0x95, 0x60, 0x01, 0xcb,
	0x20, 0x04, 0x84, 0x54, 0xb8, 0x78, 0x0b, 0x8a, 0xf2, 0x53, 0x02, 0x52, 0x8b, 0x82, 0x53, 0x93,
	0xf3, 0xf3, 0x52, 0x24, 0x58, 0xc1, 0x2a, 0x50, 0x05, 0x9d, 0x82, 0x4e, 0x3c, 0x92, 0x63, 0xbc,
	0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96, 0x63,
	0xb8, 0xf1, 0x58, 0x8e, 0x21, 0xca, 0x22, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f,
	0x57, 0x1f, 0xea, 0x4b, 0x5d, 0x90, 0x37, 0xf5, 0x21, 0x5e, 0xd3, 0x85, 0x04, 0x4e, 0x85, 0x3e,
	0x72, 0x50, 0x95, 0x54, 0x16, 0xa4, 0x16, 0x27, 0xb1, 0x81, 0xc3, 0xc6, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x0d, 0xfe, 0xf7, 0xa6, 0x46, 0x01, 0x00, 0x00,
}

func (m *StoredMinerTemplate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoredMinerTemplate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StoredMinerTemplate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ProdPerSecond != 0 {
		i = encodeVarintStoredMinerTemplate(dAtA, i, uint64(m.ProdPerSecond))
		i--
		dAtA[i] = 0x28
	}
	if m.ClaimTime != 0 {
		i = encodeVarintStoredMinerTemplate(dAtA, i, uint64(m.ClaimTime))
		i--
		dAtA[i] = 0x20
	}
	if m.Price != 0 {
		i = encodeVarintStoredMinerTemplate(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintStoredMinerTemplate(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintStoredMinerTemplate(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintStoredMinerTemplate(dAtA []byte, offset int, v uint64) int {
	offset -= sovStoredMinerTemplate(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *StoredMinerTemplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovStoredMinerTemplate(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovStoredMinerTemplate(uint64(l))
	}
	if m.Price != 0 {
		n += 1 + sovStoredMinerTemplate(uint64(m.Price))
	}
	if m.ClaimTime != 0 {
		n += 1 + sovStoredMinerTemplate(uint64(m.ClaimTime))
	}
	if m.ProdPerSecond != 0 {
		n += 1 + sovStoredMinerTemplate(uint64(m.ProdPerSecond))
	}
	return n
}

func sovStoredMinerTemplate(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozStoredMinerTemplate(x uint64) (n int) {
	return sovStoredMinerTemplate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *StoredMinerTemplate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStoredMinerTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoredMinerTemplate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoredMinerTemplate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStoredMinerTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStoredMinerTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStoredMinerTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStoredMinerTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStoredMinerTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStoredMinerTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStoredMinerTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClaimTime", wireType)
			}
			m.ClaimTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStoredMinerTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClaimTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProdPerSecond", wireType)
			}
			m.ProdPerSecond = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStoredMinerTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProdPerSecond |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStoredMinerTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStoredMinerTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipStoredMinerTemplate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowStoredMinerTemplate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStoredMinerTemplate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStoredMinerTemplate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthStoredMinerTemplate
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupStoredMinerTemplate
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthStoredMinerTemplate
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthStoredMinerTemplate        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowStoredMinerTemplate          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupStoredMinerTemplate = fmt.Errorf("proto: unexpected end of group")
)
